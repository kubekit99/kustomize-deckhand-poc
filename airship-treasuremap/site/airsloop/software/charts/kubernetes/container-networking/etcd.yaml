---
# The purpose of this file is to build the list of calico etcd nodes and the
# calico etcd certs for those nodes in the environment.
apiVersion: armada.airshipit.org/v1alpha1
kind: ArmadaChart
metadata:
  name: kubernetes-calico-etcd
  layeringDefinition:
    abstract: false
    layer: site
    parentSelector:
      name: kubernetes-calico-etcd-global
    actions:
      - method: merge
        path: .
  substitutions:
    # Generate a list of control plane nodes (i.e. genesis node + master node
    # list) on which calico etcd will run and will need certs. It is assumed
    # that Airship sites will have 4 control plane nodes, so this should not need to
    # change for a new site.
    - src:
        kind: PeglegCommonAddresses
        name: common-addresses
        path: .genesis.hostname
      dest:
        path: .values.nodes[0].name
    - src:
        kind: PeglegCommonAddresses
        name: common-addresses
        path: .masters[0].hostname
      dest:
        path: .values.nodes[1].name
    - src:
        kind: PeglegCommonAddresses
        name: common-addresses
        path: .masters[1].hostname
      dest:
        path: .values.nodes[2].name

    # Certificate substitutions for the node names assembled on the above list.
    # NEWSITE-CHANGEME: Per above, the number of substitutions should not need
    # to change with a standard Airship deployment. However, the names of each
    # deckhand certficiate should be updated with the correct hostnames for your
    # environment. The ordering is important (Genesis is index 0, then master
    # nodes in the order they are specified in common-addresses).

    # Genesis hostname - airsloop-control-1
    - src:
        kind: DeckhandCertificate
        name: calico-etcd-airsloop-control-1
        path: .
      dest:
        path: .values.nodes[0].tls.client.cert
    - src:
        kind: DeckhandCertificateKey
        name: calico-etcd-airsloop-control-1
        path: .
      dest:
        path: .values.nodes[0].tls.client.key
    - src:
        kind: DeckhandCertificate
        name: calico-etcd-airsloop-control-1-peer
        path: .
      dest:
        path: .values.nodes[0].tls.peer.cert
    - src:
        kind: DeckhandCertificateKey
        name: calico-etcd-airsloop-control-1-peer
        path: .
      dest:
        path: .values.nodes[0].tls.peer.key

    # master node 1 hostname - airsloop-control-2
    - src:
        kind: DeckhandCertificate
        name: calico-etcd-airsloop-control-2
        path: .
      dest:
        path: .values.nodes[1].tls.client.cert
    - src:
        kind: DeckhandCertificateKey
        name: calico-etcd-airsloop-control-2
        path: .
      dest:
        path: .values.nodes[1].tls.client.key
    - src:
        kind: DeckhandCertificate
        name: calico-etcd-airsloop-control-2-peer
        path: .
      dest:
        path: .values.nodes[1].tls.peer.cert
    - src:
        kind: DeckhandCertificateKey
        name: calico-etcd-airsloop-control-2-peer
        path: .
      dest:
        path: .values.nodes[1].tls.peer.key

    # master node 2 hostname - airsloop-control-3
    - src:
        kind: DeckhandCertificate
        name: calico-etcd-airsloop-control-3
        path: .
      dest:
        path: .values.nodes[2].tls.client.cert
    - src:
        kind: DeckhandCertificateKey
        name: calico-etcd-airsloop-control-3
        path: .
      dest:
        path: .values.nodes[2].tls.client.key
    - src:
        kind: DeckhandCertificate
        name: calico-etcd-airsloop-control-3-peer
        path: .
      dest:
        path: .values.nodes[2].tls.peer.cert
    - src:
        kind: DeckhandCertificateKey
        name: calico-etcd-airsloop-control-3-peer
        path: .
      dest:
        path: .values.nodes[2].tls.peer.key

spec: {}
...
